# file:
# author: ssshen
# email: ssshen@hengtiansoft.com
# date: Mar 20, 2013
# description:

#!/usr/bin/perl

use strict;
use warnings;

use FindBin qw($Bin);
use lib "$Bin/../../wrapper/lib";
use Fdftest::Fdfapi;
use Fdftest::Node;
use Fdftest::TestCase;
use Fdftest::BasicTest;
#use Test::More tests => 25;
use Test::More 'no_plan';
use threads;

my $node;
my @threads;
#my @data = ([50, 64000, 6250], [100, 128000, 6250], [150, 512, 37500]);
my @data = ([64, 16000, 3000], [74, 32000, 3000], [84, 64000, 3000], [94, 128000, 3000], [104, 48,60000]);

sub worker{
    my ($conn,$cname,$choice,$durability,$async_write)= @_;
    my $ret;
    $ret = OpenContainer($conn,$cname,"ZS_CTNR_CREATE",0,$choice,$durability,$async_write);
    my $cguid = $1 if ($ret =~ /OK cguid=(\d+)/);
    foreach my $d(@data){
    	WriteReadObjects($conn,$cguid,1000,$$d[0],1000,$$d[1],$$d[2]);
    }
    	FlushContainer($conn,$cguid);
    	CloseContainer($conn,$cguid);
    	DeleteContainer($conn,$cguid)
}
 
sub test_run {
    my $ret;
    my @prop = ([4, "ZS_DURABILITY_HW_CRASH_SAFE", "no"],);
    $ret = $node->start(ZS_REFORMAT => 1,gdb_switch => 1);    
    like($ret,qr/OK.*/,"Node Start: ZS_REFORMAT=1");

    foreach my $p(@prop){
    	for(my $i=0; $i<=7; $i++){
        	push(@threads, threads->new(\&worker,$node->conn($i),"ctr-$i",$$p[0],$$p[1],$$p[2]));
        }
    }
   
   $_->join for (@threads);
   print @threads;
    
   $ret = $node->stop();
   like($ret,qr/OK.*/,"Node Stop");

    return;
}

sub test_init {
    $node = Fdftest::Node->new(
                ip     => "127.0.0.1", 
                port   => "24422",
                nconn  => 10,
            );
}

sub test_clean {
    $node->stop();
    $node->set_ZS_prop(ZS_REFORMAT  => 1);
    return;
}

#
# main
#
{
    test_init();
    
    test_run();

    test_clean();
}


# clean ENV
END {
    $node->clean();
}


